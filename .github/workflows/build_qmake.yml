name: QMake Build Matrix

on:
  watch:
    types: [started]
  push:
    branches: [ master ]
    paths: 
      - 'src/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ master ]
    paths: 
      - 'src/**'
      - '.github/workflows/**'
  
defaults:
  run:
    shell: pwsh

jobs:
   upload:
     name: Upload
     runs-on: ubuntu-latest
     needs: build 
     
     steps:
      - uses: actions/checkout@v2
        with:
          repository: jing332/plz-download
      - uses: actions/setup-node@v2.1.1
        with: 
          node-version: v14.3.0 
          
      - name: Download All Build Artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./download
       
      - name: Upload to WebDAV
        run: |
          npm i
          npm start
        env:
          url: ${{ secrets.nutstore_url }}
          username: ${{ secrets.nutstore_username }}
          password: ${{ secrets.nutstore_password }}
  
   build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            name: "Windows Latest MinGW"
            
          - os: ubuntu-latest
            name: "Ubuntu Latest GCC"
          
          - os: macos-latest
            name: "macOS Latest Clang"

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: jing332/xmly-downloader-qt5
          
      - name: Switch gcc and g++ version to 9
        if: runner.os == 'Linux'
        run: |
          echo ${{ github.ref }}
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 100
          gcc -v
          g++ -v
        
      - name: Install Go
        uses: actions/setup-go@v2.1.1
      
      - name: Install Qt
        run: |
          if ("${{ runner.os }}" -eq "Windows") {
            curl -LJO https://github.com/lkeegan/qt5-static/releases/download/5.15.0-no-zstd/qt5-static-win32.tgz
            7z x qt5-static-win32.tgz
            7z x qt5-static-win32.tar
            echo "::add-path::${{ github.workspace }}\c\libs\bin"
          }
          elseif ("${{ runner.os }}" -eq "Linux") {
            curl -LJO https://github.com/lkeegan/qt5-static/releases/download/5.15.0-no-zstd/qt5-static-linux.tgz
            tar xzf qt5-static-linux.tgz
            echo "::add-path::${{ github.workspace }}/opt/libs/bin"
          }
          elseif ("${{ runner.os }}" -eq "MacOS") {
            curl -LJO https://github.com/lkeegan/qt5-static/releases/download/5.15.0-no-zstd/qt5-static-osx.tgz
            tar xzf qt5-static-osx.tgz
            echo "::add-path::${{ github.workspace }}/opt/libs/bin"
          }
          
      - name: Install Libs
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install libxcb*
          sudo apt-get install libx11-xcb
          sudo apt-get install libx11-xcb-dev
          sudo apt-get install libxkbcommon-x11-dev

      - name: Init Environment
        run: |
          echo "::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/*/}"
          if ("${{ runner.os }}" -eq "windows") {
            echo "::add-path::C:\msys64"
          }
          qmake -v
          go env

      - name: Build
        run: |
          if ("${{ runner.os }}" -eq "windows") {
            $env:MSYS2_PATH_TYPE="inherit"
            msys2_shell.cmd -defterm -no-start -here -mingw32 -l ./ci/build.sh
          }
          else {
            bash ./ci/build.sh
          }
          
      - name: Pack Application
        run: |
          cd build
          if ("${{ runner.os }}" -eq "Windows") {
            mkdir xmly-downloader-qt5_win32
            copy ./release/xmly-downloader-qt5.exe ./xmly-downloader-qt5_win32
            7z a xmly-downloader-qt5_win32.7z ./xmly-downloader-qt5_win32
          }
          elseif ("${{ runner.os }}" -eq "Linux") {
            mkdir xmly-downloader-qt5_linux
            ls
            copy ./xmly-downloader-qt5 ./xmly-downloader-qt5_linux
            tar cvfJ xmly-downloader-qt5_linux.tar.xz ./xmly-downloader-qt5_linux
          }
          elseif ("${{ runner.os }}" -eq "macOS") {
            tar cvfJ xmly-downloader-qt5_macOS.tar.xz ./xmly-downloader-qt5.app
          }
          
      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2.1.4
        with:
          name: xmly-downloader-qt5_win32_${{ github.run_id }}.7z
          path: ./build/xmly-downloader-qt5_win32.7z
        
      - name: Upload Linux Artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2.1.4
        with:
          name: xmly-downloader-qt5_linux_${{ github.run_id }}.tar.xz
          path: ./build/xmly-downloader-qt5_linux.tar.xz
          
      - name: Upload MacOS Artifact
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2.1.4
        with:
          name: xmly-downloader-qt5_macOS_${{ github.run_id }}.tar.xz
          path: ./build/xmly-downloader-qt5_macOS.tar.xz
